Name: Armant Touche
Class: CS 163
Instructor: Karla Fant
Assignment: Program #1 Efficiency Write-up

(1) How well did the data structure selected perform for the assigned application?

    I choose LLL with dynamically allocated arrays for storing the foodcart information which does not have to be statically allocated before run-time, which provides a flexible data structure. The ADT is a new concept but hiding the head pointer inside the List function provide information encapsulation and did not allow the client program, main, to have access to the LLL which adheres to ADT principles of information hiding. I had to make sure to construct my struct's containing the data members to ensure they are not pointing to memory else where in memory when I went into scope of my object Foodcart. When I went out of scope, I made sure to destruct appropiately to prevent memory leaks. Although, the way I implemented my add-favorite-food function, I made an error in error handling which resulted in buffer issues. I am still learning how to error handling or better implement my node-mutator functions.

(2) Would a different data structure work better? If so, which one and why...

    For this first program, I think learning ADT and using LLL is appropiate because there isn't too many requirements in the program assignment background information that stated anything else but I may be wrong in using different data structure.

(3) What was efficient about your design and use of the data structure?

    Efficiency within in program could be better but with time restrictions, I think I hid my information inputted from the client program appropiately because I never read-in within the same object containing the head pointer which is what I think is the basic requirement for program #1. My Delete Foodcart function was the better of them all because keeping the linkage in the LLL intact isn't a hard concept.

(4) What was not efficient?

    I think my Delete favorite food function and Add favorite food may have some bugs. The client program may create nodes with no information within them. I noticed this the day of it being due. I do not know if the bug will be noticed or not but I want to follow up, perhaps to go over my mistakes. 

(5) What would you do differently if you had more time to solve this problem?

    I would spend more time implementing and debugging with GDB. The fact I did not learn how to use GDB till the week of the program being may have hindered my assuring the quality of the program being higher than what I submitted but I will use GDB more as I move through this course.

