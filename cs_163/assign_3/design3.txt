Name: Armant Touche
Class: CS 163
Instructor: Karla Fant
Assignment: Program 3 Design

What functions will be present in the public and private section?

For this assignment I will have a client interface called college housing and then for my ADT interface. I will have a hash class with a node structure for the linked list of nodes for separate chaining. Separate chaining will prevent collision from happening if the hash function for two seemingly different keys that produce the same index position on the hash table. In my client interface, in the public section there will be a create floor plan function, copy floor plan, retrieve, and display function. In the private section, there will be: (i) City Location (ii) Square footage (iii) Number of bedrooms (iv) Distance from Portland State University. For my ADT interface for table, in the public section, there will be: (i) Insert (ii) Removal by keyword (iii) Removal by number of miles from Portland State University (iv) Retrieval by keyword (v) Display by keyword. For my keyword, City location will be the keyword. I will add each string character's ASCII value and mod the sum by the size of my hash table which will be twenty-three. In the private section of table, I will store the array of pointers pointing to the node structure containing the college housing object and the self-referecning pointer next. Also, in the public section of table, my constructor will pass in a integer value called table size which will equal twenty-three. 

How will each function report success or failure back to the calling routine?

For my table public functions, I use them more in conditional statement to test if retrival was a success or not. I will have to pass the client interface object created at the beginning in my main function through the retrieval function of the table type. I hope I can implement it correctly like the retrieve function from Lab #6 but I will see when I start implementing them.

How are each function of the ADT shielded from the client program?

The ADT will be separate from the client program and will give access to the private memebers in the ADT to the client program. I will not be passing pointers to the hash table function. The hash function will act as the middle man in accessing the table of pointers pointing to already created entries for floor plans. The keyword and newly created entries will be the only aruguments being passed to my ADT which is perfectly legal in regards to data abstraction and information hiding.

What data structures being used will handling special cases?

The biggest special for my ADT will be collision but I will be doing modula arithmetic with table being a prime number to create a unique index and hopefully implement a "perfect" hash function like Carrano's text suggest in order to prevent collision. For my table's insertion function, collision is a big a case which I will implement separate chaining of nodes into a linked list which makes retrieval a little bit more difficult but that is counteracted by node traversal.

